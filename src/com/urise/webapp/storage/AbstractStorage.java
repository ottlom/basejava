package com.urise.webapp.storage;import com.urise.webapp.exception.ExistStorageException;import com.urise.webapp.exception.NotExistStorageException;import com.urise.webapp.model.Resume;public abstract class AbstractStorage implements Storage {    @Override    public void save(Resume r) {        doSave(getNotExistingSearchKey(r.getUuid()));    }    @Override    public void delete(String uuid) {        doDelete(getExistingSearchKey(uuid));    }    @Override    public void update(Resume r) {        doUpdate(getExistingSearchKey(r.getUuid()));    }    @Override    public Resume get(String uuid) {        return doGet(getExistingSearchKey(uuid));    }    private Object getExistingSearchKey(String uuid) {        Object searchKey = getSearchKey(uuid);        if (isExist(searchKey)) {            throw new NotExistStorageException(uuid);        } else {            return searchKey;        }    }    private Object getNotExistingSearchKey(String uuid) {        Object searchKey = getSearchKey(uuid);        if (isExist(searchKey)) {            throw new ExistStorageException(uuid);        }        return searchKey;    }    protected abstract Object getSearchKey(String uuid);    protected abstract boolean isExist(Object searchKey);    protected abstract void doSave(Object searchKey);    protected abstract void doDelete(Object searchKey);    protected abstract void doUpdate(Object searchKey);    protected abstract Resume doGet(Object searchKey);}