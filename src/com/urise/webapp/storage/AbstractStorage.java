package com.urise.webapp.storage;import com.urise.webapp.exception.ExistStorageException;import com.urise.webapp.exception.NotExistStorageException;import com.urise.webapp.model.Resume;public abstract class AbstractStorage implements Storage {    @Override    public void save(Resume r) {        if (ExistResume(r)) {            doSave(r);        }    }    @Override    public void delete(String uuid) {        if (NotExistResume(get(uuid))) {            doDelete(get(uuid));        }    }    @Override    public void update(Resume r) {        if (NotExistResume(r)) {            doUpdate(r);        }    }    @Override    public Resume get(String uuid) {        Resume resume = new Resume(uuid);        if (NotExistResume(resume)) {            return doGet(resume);        } else {            throw new NotExistStorageException(uuid);        }    }    private boolean ExistResume(Resume r) {        if (getIndex(r.getUuid()) >= 0) {            throw new ExistStorageException(r.getUuid());        } else {            return true;        }    }    private boolean NotExistResume(Resume r) {        if (getIndex(r.getUuid()) < 0) {            throw new NotExistStorageException(r.getUuid());        } else {            return true;        }    }    protected abstract int getIndex(String uuid);    protected abstract void doSave(Resume r);    protected abstract void doDelete(Resume r);    protected abstract void doUpdate(Resume r);    protected abstract Resume doGet(Resume r);}